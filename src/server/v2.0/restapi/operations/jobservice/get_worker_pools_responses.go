// Code generated by go-swagger; DO NOT EDIT.

package jobservice

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/goharbor/harbor/src/server/v2.0/models"
)

// GetWorkerPoolsOKCode is the HTTP code returned for type GetWorkerPoolsOK
const GetWorkerPoolsOKCode int = 200

/*GetWorkerPoolsOK Get worker pools successfully.

swagger:response getWorkerPoolsOK
*/
type GetWorkerPoolsOK struct {

	/*
	  In: Body
	*/
	Payload []*models.WorkerPool `json:"body,omitempty"`
}

// NewGetWorkerPoolsOK creates GetWorkerPoolsOK with default headers values
func NewGetWorkerPoolsOK() *GetWorkerPoolsOK {

	return &GetWorkerPoolsOK{}
}

// WithPayload adds the payload to the get worker pools o k response
func (o *GetWorkerPoolsOK) WithPayload(payload []*models.WorkerPool) *GetWorkerPoolsOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get worker pools o k response
func (o *GetWorkerPoolsOK) SetPayload(payload []*models.WorkerPool) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetWorkerPoolsOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.WorkerPool, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// GetWorkerPoolsUnauthorizedCode is the HTTP code returned for type GetWorkerPoolsUnauthorized
const GetWorkerPoolsUnauthorizedCode int = 401

/*GetWorkerPoolsUnauthorized Unauthorized

swagger:response getWorkerPoolsUnauthorized
*/
type GetWorkerPoolsUnauthorized struct {
	/*The ID of the corresponding request for the response

	 */
	XRequestID string `json:"X-Request-Id"`

	/*
	  In: Body
	*/
	Payload *models.Errors `json:"body,omitempty"`
}

// NewGetWorkerPoolsUnauthorized creates GetWorkerPoolsUnauthorized with default headers values
func NewGetWorkerPoolsUnauthorized() *GetWorkerPoolsUnauthorized {

	return &GetWorkerPoolsUnauthorized{}
}

// WithXRequestID adds the xRequestId to the get worker pools unauthorized response
func (o *GetWorkerPoolsUnauthorized) WithXRequestID(xRequestID string) *GetWorkerPoolsUnauthorized {
	o.XRequestID = xRequestID
	return o
}

// SetXRequestID sets the xRequestId to the get worker pools unauthorized response
func (o *GetWorkerPoolsUnauthorized) SetXRequestID(xRequestID string) {
	o.XRequestID = xRequestID
}

// WithPayload adds the payload to the get worker pools unauthorized response
func (o *GetWorkerPoolsUnauthorized) WithPayload(payload *models.Errors) *GetWorkerPoolsUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get worker pools unauthorized response
func (o *GetWorkerPoolsUnauthorized) SetPayload(payload *models.Errors) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetWorkerPoolsUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header X-Request-Id

	xRequestID := o.XRequestID
	if xRequestID != "" {
		rw.Header().Set("X-Request-Id", xRequestID)
	}

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetWorkerPoolsForbiddenCode is the HTTP code returned for type GetWorkerPoolsForbidden
const GetWorkerPoolsForbiddenCode int = 403

/*GetWorkerPoolsForbidden Forbidden

swagger:response getWorkerPoolsForbidden
*/
type GetWorkerPoolsForbidden struct {
	/*The ID of the corresponding request for the response

	 */
	XRequestID string `json:"X-Request-Id"`

	/*
	  In: Body
	*/
	Payload *models.Errors `json:"body,omitempty"`
}

// NewGetWorkerPoolsForbidden creates GetWorkerPoolsForbidden with default headers values
func NewGetWorkerPoolsForbidden() *GetWorkerPoolsForbidden {

	return &GetWorkerPoolsForbidden{}
}

// WithXRequestID adds the xRequestId to the get worker pools forbidden response
func (o *GetWorkerPoolsForbidden) WithXRequestID(xRequestID string) *GetWorkerPoolsForbidden {
	o.XRequestID = xRequestID
	return o
}

// SetXRequestID sets the xRequestId to the get worker pools forbidden response
func (o *GetWorkerPoolsForbidden) SetXRequestID(xRequestID string) {
	o.XRequestID = xRequestID
}

// WithPayload adds the payload to the get worker pools forbidden response
func (o *GetWorkerPoolsForbidden) WithPayload(payload *models.Errors) *GetWorkerPoolsForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get worker pools forbidden response
func (o *GetWorkerPoolsForbidden) SetPayload(payload *models.Errors) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetWorkerPoolsForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header X-Request-Id

	xRequestID := o.XRequestID
	if xRequestID != "" {
		rw.Header().Set("X-Request-Id", xRequestID)
	}

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// GetWorkerPoolsInternalServerErrorCode is the HTTP code returned for type GetWorkerPoolsInternalServerError
const GetWorkerPoolsInternalServerErrorCode int = 500

/*GetWorkerPoolsInternalServerError Internal server error

swagger:response getWorkerPoolsInternalServerError
*/
type GetWorkerPoolsInternalServerError struct {
	/*The ID of the corresponding request for the response

	 */
	XRequestID string `json:"X-Request-Id"`

	/*
	  In: Body
	*/
	Payload *models.Errors `json:"body,omitempty"`
}

// NewGetWorkerPoolsInternalServerError creates GetWorkerPoolsInternalServerError with default headers values
func NewGetWorkerPoolsInternalServerError() *GetWorkerPoolsInternalServerError {

	return &GetWorkerPoolsInternalServerError{}
}

// WithXRequestID adds the xRequestId to the get worker pools internal server error response
func (o *GetWorkerPoolsInternalServerError) WithXRequestID(xRequestID string) *GetWorkerPoolsInternalServerError {
	o.XRequestID = xRequestID
	return o
}

// SetXRequestID sets the xRequestId to the get worker pools internal server error response
func (o *GetWorkerPoolsInternalServerError) SetXRequestID(xRequestID string) {
	o.XRequestID = xRequestID
}

// WithPayload adds the payload to the get worker pools internal server error response
func (o *GetWorkerPoolsInternalServerError) WithPayload(payload *models.Errors) *GetWorkerPoolsInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the get worker pools internal server error response
func (o *GetWorkerPoolsInternalServerError) SetPayload(payload *models.Errors) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *GetWorkerPoolsInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header X-Request-Id

	xRequestID := o.XRequestID
	if xRequestID != "" {
		rw.Header().Set("X-Request-Id", xRequestID)
	}

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
