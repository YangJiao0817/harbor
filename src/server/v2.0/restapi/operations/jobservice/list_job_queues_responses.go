// Code generated by go-swagger; DO NOT EDIT.

package jobservice

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"net/http"

	"github.com/go-openapi/runtime"

	"github.com/goharbor/harbor/src/server/v2.0/models"
)

// ListJobQueuesOKCode is the HTTP code returned for type ListJobQueuesOK
const ListJobQueuesOKCode int = 200

/*ListJobQueuesOK List job queue successfully.

swagger:response listJobQueuesOK
*/
type ListJobQueuesOK struct {

	/*
	  In: Body
	*/
	Payload []*models.JobQueue `json:"body,omitempty"`
}

// NewListJobQueuesOK creates ListJobQueuesOK with default headers values
func NewListJobQueuesOK() *ListJobQueuesOK {

	return &ListJobQueuesOK{}
}

// WithPayload adds the payload to the list job queues o k response
func (o *ListJobQueuesOK) WithPayload(payload []*models.JobQueue) *ListJobQueuesOK {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list job queues o k response
func (o *ListJobQueuesOK) SetPayload(payload []*models.JobQueue) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListJobQueuesOK) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	rw.WriteHeader(200)
	payload := o.Payload
	if payload == nil {
		// return empty array
		payload = make([]*models.JobQueue, 0, 50)
	}

	if err := producer.Produce(rw, payload); err != nil {
		panic(err) // let the recovery middleware deal with this
	}
}

// ListJobQueuesUnauthorizedCode is the HTTP code returned for type ListJobQueuesUnauthorized
const ListJobQueuesUnauthorizedCode int = 401

/*ListJobQueuesUnauthorized Unauthorized

swagger:response listJobQueuesUnauthorized
*/
type ListJobQueuesUnauthorized struct {
	/*The ID of the corresponding request for the response

	 */
	XRequestID string `json:"X-Request-Id"`

	/*
	  In: Body
	*/
	Payload *models.Errors `json:"body,omitempty"`
}

// NewListJobQueuesUnauthorized creates ListJobQueuesUnauthorized with default headers values
func NewListJobQueuesUnauthorized() *ListJobQueuesUnauthorized {

	return &ListJobQueuesUnauthorized{}
}

// WithXRequestID adds the xRequestId to the list job queues unauthorized response
func (o *ListJobQueuesUnauthorized) WithXRequestID(xRequestID string) *ListJobQueuesUnauthorized {
	o.XRequestID = xRequestID
	return o
}

// SetXRequestID sets the xRequestId to the list job queues unauthorized response
func (o *ListJobQueuesUnauthorized) SetXRequestID(xRequestID string) {
	o.XRequestID = xRequestID
}

// WithPayload adds the payload to the list job queues unauthorized response
func (o *ListJobQueuesUnauthorized) WithPayload(payload *models.Errors) *ListJobQueuesUnauthorized {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list job queues unauthorized response
func (o *ListJobQueuesUnauthorized) SetPayload(payload *models.Errors) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListJobQueuesUnauthorized) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header X-Request-Id

	xRequestID := o.XRequestID
	if xRequestID != "" {
		rw.Header().Set("X-Request-Id", xRequestID)
	}

	rw.WriteHeader(401)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ListJobQueuesForbiddenCode is the HTTP code returned for type ListJobQueuesForbidden
const ListJobQueuesForbiddenCode int = 403

/*ListJobQueuesForbidden Forbidden

swagger:response listJobQueuesForbidden
*/
type ListJobQueuesForbidden struct {
	/*The ID of the corresponding request for the response

	 */
	XRequestID string `json:"X-Request-Id"`

	/*
	  In: Body
	*/
	Payload *models.Errors `json:"body,omitempty"`
}

// NewListJobQueuesForbidden creates ListJobQueuesForbidden with default headers values
func NewListJobQueuesForbidden() *ListJobQueuesForbidden {

	return &ListJobQueuesForbidden{}
}

// WithXRequestID adds the xRequestId to the list job queues forbidden response
func (o *ListJobQueuesForbidden) WithXRequestID(xRequestID string) *ListJobQueuesForbidden {
	o.XRequestID = xRequestID
	return o
}

// SetXRequestID sets the xRequestId to the list job queues forbidden response
func (o *ListJobQueuesForbidden) SetXRequestID(xRequestID string) {
	o.XRequestID = xRequestID
}

// WithPayload adds the payload to the list job queues forbidden response
func (o *ListJobQueuesForbidden) WithPayload(payload *models.Errors) *ListJobQueuesForbidden {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list job queues forbidden response
func (o *ListJobQueuesForbidden) SetPayload(payload *models.Errors) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListJobQueuesForbidden) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header X-Request-Id

	xRequestID := o.XRequestID
	if xRequestID != "" {
		rw.Header().Set("X-Request-Id", xRequestID)
	}

	rw.WriteHeader(403)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ListJobQueuesNotFoundCode is the HTTP code returned for type ListJobQueuesNotFound
const ListJobQueuesNotFoundCode int = 404

/*ListJobQueuesNotFound Not found

swagger:response listJobQueuesNotFound
*/
type ListJobQueuesNotFound struct {
	/*The ID of the corresponding request for the response

	 */
	XRequestID string `json:"X-Request-Id"`

	/*
	  In: Body
	*/
	Payload *models.Errors `json:"body,omitempty"`
}

// NewListJobQueuesNotFound creates ListJobQueuesNotFound with default headers values
func NewListJobQueuesNotFound() *ListJobQueuesNotFound {

	return &ListJobQueuesNotFound{}
}

// WithXRequestID adds the xRequestId to the list job queues not found response
func (o *ListJobQueuesNotFound) WithXRequestID(xRequestID string) *ListJobQueuesNotFound {
	o.XRequestID = xRequestID
	return o
}

// SetXRequestID sets the xRequestId to the list job queues not found response
func (o *ListJobQueuesNotFound) SetXRequestID(xRequestID string) {
	o.XRequestID = xRequestID
}

// WithPayload adds the payload to the list job queues not found response
func (o *ListJobQueuesNotFound) WithPayload(payload *models.Errors) *ListJobQueuesNotFound {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list job queues not found response
func (o *ListJobQueuesNotFound) SetPayload(payload *models.Errors) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListJobQueuesNotFound) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header X-Request-Id

	xRequestID := o.XRequestID
	if xRequestID != "" {
		rw.Header().Set("X-Request-Id", xRequestID)
	}

	rw.WriteHeader(404)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}

// ListJobQueuesInternalServerErrorCode is the HTTP code returned for type ListJobQueuesInternalServerError
const ListJobQueuesInternalServerErrorCode int = 500

/*ListJobQueuesInternalServerError Internal server error

swagger:response listJobQueuesInternalServerError
*/
type ListJobQueuesInternalServerError struct {
	/*The ID of the corresponding request for the response

	 */
	XRequestID string `json:"X-Request-Id"`

	/*
	  In: Body
	*/
	Payload *models.Errors `json:"body,omitempty"`
}

// NewListJobQueuesInternalServerError creates ListJobQueuesInternalServerError with default headers values
func NewListJobQueuesInternalServerError() *ListJobQueuesInternalServerError {

	return &ListJobQueuesInternalServerError{}
}

// WithXRequestID adds the xRequestId to the list job queues internal server error response
func (o *ListJobQueuesInternalServerError) WithXRequestID(xRequestID string) *ListJobQueuesInternalServerError {
	o.XRequestID = xRequestID
	return o
}

// SetXRequestID sets the xRequestId to the list job queues internal server error response
func (o *ListJobQueuesInternalServerError) SetXRequestID(xRequestID string) {
	o.XRequestID = xRequestID
}

// WithPayload adds the payload to the list job queues internal server error response
func (o *ListJobQueuesInternalServerError) WithPayload(payload *models.Errors) *ListJobQueuesInternalServerError {
	o.Payload = payload
	return o
}

// SetPayload sets the payload to the list job queues internal server error response
func (o *ListJobQueuesInternalServerError) SetPayload(payload *models.Errors) {
	o.Payload = payload
}

// WriteResponse to the client
func (o *ListJobQueuesInternalServerError) WriteResponse(rw http.ResponseWriter, producer runtime.Producer) {

	// response header X-Request-Id

	xRequestID := o.XRequestID
	if xRequestID != "" {
		rw.Header().Set("X-Request-Id", xRequestID)
	}

	rw.WriteHeader(500)
	if o.Payload != nil {
		payload := o.Payload
		if err := producer.Produce(rw, payload); err != nil {
			panic(err) // let the recovery middleware deal with this
		}
	}
}
